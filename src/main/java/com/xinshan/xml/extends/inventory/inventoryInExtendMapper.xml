<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinshan.dao.extend.inventory.InventoryInExtendMapper">
    <insert id="createInventoryIn" parameterType="com.xinshan.model.InventoryIn" useGeneratedKeys="true" keyProperty="inventory_in_id">
        insert into inventory_in (inventory_in_id, order_id, purchase_id,
          supplier_id, inventory_in_date, record_employee_code,
          record_employee_name, inventory_in_code,
          order_return_id, gift_return_id)
        values (#{inventory_in_id,jdbcType=INTEGER}, #{order_id,jdbcType=INTEGER}, #{purchase_id,jdbcType=INTEGER},
          #{supplier_id,jdbcType=INTEGER}, #{inventory_in_date,jdbcType=TIMESTAMP}, #{record_employee_code,jdbcType=VARCHAR},
          #{record_employee_name,jdbcType=VARCHAR}, #{inventory_in_code,jdbcType=VARCHAR},
          #{order_return_id,jdbcType=INTEGER}, #{gift_return_id,jdbcType=INTEGER})
    </insert>
    <insert id="createInventoryInCommodity" parameterType="com.xinshan.model.InventoryInCommodity"
            useGeneratedKeys="true" keyProperty="inventory_in_commodity_id">
        insert into inventory_in_commodity (inventory_in_commodity_id, inventory_in_id,
          purchase_commodity_id, commodity_id, commodity_store_id,
          in_num, inventory_in_status, inventory_in_employee_code,
          inventory_in_employee_name, confirm_in_date,
          sample, return_commodity)
        values (#{inventory_in_commodity_id,jdbcType=INTEGER}, #{inventory_in_id,jdbcType=INTEGER},
          #{purchase_commodity_id,jdbcType=INTEGER}, #{commodity_id,jdbcType=INTEGER}, #{commodity_store_id,jdbcType=INTEGER},
          #{in_num,jdbcType=INTEGER}, #{inventory_in_status,jdbcType=INTEGER}, #{inventory_in_employee_code,jdbcType=VARCHAR},
          #{inventory_in_employee_name,jdbcType=VARCHAR}, #{confirm_in_date,jdbcType=TIMESTAMP},
          #{sample,jdbcType=INTEGER}, #{return_commodity,jdbcType=INTEGER})
    </insert>

    <select id="maxInventoryInCode" resultType="java.lang.String">
        select max(inventory_in_code) from inventory_in where inventory_in_code regexp #{param}
    </select>

    <resultMap id="inventoryInResultMap" type="com.xinshan.model.extend.inventory.InventoryInExtend"
               extends="com.xinshan.dao.InventoryInMapper.BaseResultMap">
        <association property="supplier" javaType="com.xinshan.model.Supplier"
                     resultMap="com.xinshan.dao.SupplierMapper.BaseResultMap">

        </association>
        <association property="order" javaType="com.xinshan.model.Order"
                     resultMap="com.xinshan.dao.OrderMapper.BaseResultMap">

        </association>
        <association property="purchase" javaType="com.xinshan.model.Purchase"
                     resultMap="com.xinshan.dao.PurchaseMapper.BaseResultMap">

        </association>
        <association property="gift" javaType="com.xinshan.model.Gift" resultMap="com.xinshan.dao.GiftMapper.BaseResultMap"/>
        <association property="user" javaType="com.xinshan.model.User" resultMap="com.xinshan.dao.UserMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryInList" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultMap="inventoryInResultMap">
        select
        inventory_in.*
        ,supplier.supplier_name
        ,purchase.purchase_code
        ,`order`.order_code,`order`.customer_name,`order`.customer_phone_number, gift.gift_code
        ,`user`.user_name,`user`.user_phone,`user`.user_second_phone
        from inventory_in
        left join supplier on inventory_in.supplier_id = supplier.supplier_id
        left join purchase on inventory_in.purchase_id = purchase.purchase_id
        left join `order` on inventory_in.order_id = `order`.order_id
        left join gift on gift.gift_id = purchase.gift_id
        left join `user` on `user`.user_id = gift.user_id
        where 1=1
        <if test="inventoryInIds != null">
            and inventory_in.inventory_in_id in
            <foreach item="item" index="index" collection="inventoryInIds"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by inventory_in.inventory_in_date desc
    </select>

    <select id="inventoryInIds" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select DISTINCT inventory_in.inventory_in_id from inventory_in
        left join supplier on inventory_in.supplier_id = supplier.supplier_id
        left join purchase on inventory_in.purchase_id = purchase.purchase_id
        left join `order` on inventory_in.order_id = `order`.order_id
        left join inventory_in_commodity on inventory_in.inventory_in_id = inventory_in_commodity.inventory_in_id
        LEFT JOIN commodity on inventory_in_commodity.commodity_id = commodity.commodity_id
        left join gift on gift.gift_id = purchase.gift_id
        left join `user` on `user`.user_id = gift.user_id
        where 1=1
        <if test="inventory_in_id != null">
            and inventory_in.inventory_in_id
        </if>
        <if test="param != null">
            and (purchase.purchase_code like "%"#{param}"%"
            or `order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            or commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            or inventory_in.inventory_in_code like "%"#{param}"%"
            or gift.gift_code like "%"#{param}"%"
            or `user`.user_name like "%"#{param}"%"
            or `user`.user_phone like "%"#{param}"%"
            or `user`.user_second_phone like "%"#{param}"%"
            )
        </if>
        <if test="commodity_id != null">
            and purchase_commodity.commodity_id=#{commodity_id}
        </if>
        <if test="commodity_store_id != null">
            and purchase_commodity.commodity_store_id=#{commodity_store_id}
        </if>
        <if test="supplier_id != null">
            and supplier.supplier_id = #{supplier_id}
        </if>
        <if test="order_return_id != null">
            and inventory_in.order_return_id = #{order_return_id}
        </if>
        <if test="gift_return_id != null">
            and inventory_in.gift_return_id = #{gift_return_id}
        </if>
        order by inventory_in.inventory_in_date desc
        <if test="limit != null and start != null">
            limit #{start},#{limit}
        </if>
    </select>
    <select id="countInventoryIn" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select count(DISTINCT inventory_in.inventory_in_id) from inventory_in
        left join supplier on inventory_in.supplier_id = supplier.supplier_id
        left join purchase on inventory_in.purchase_id = purchase.purchase_id
        left join `order` on inventory_in.order_id = `order`.order_id
        left join inventory_in_commodity on inventory_in.inventory_in_id = inventory_in_commodity.inventory_in_id
        LEFT JOIN commodity on inventory_in_commodity.commodity_id = commodity.commodity_id
        left join gift on gift.gift_id = purchase.gift_id
        left join `user` on `user`.user_id = gift.user_id
        where 1=1
        <if test="inventory_in_id != null">
            and inventory_in.inventory_in_id
        </if>
        <if test="param != null">
            and (purchase.purchase_code like "%"#{param}"%"
            or `order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            or commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            or inventory_in.inventory_in_code like "%"#{param}"%"
            or gift.gift_code like "%"#{param}"%"
            or `user`.user_name like "%"#{param}"%"
            or `user`.user_phone like "%"#{param}"%"
            or `user`.user_second_phone like "%"#{param}"%"
            )
        </if>
        <if test="commodity_id != null">
            and purchase_commodity.commodity_id=#{commodity_id}
        </if>
        <if test="commodity_store_id != null">
            and purchase_commodity.commodity_store_id=#{commodity_store_id}
        </if>
        <if test="supplier_id != null">
            and supplier.supplier_id = #{supplier_id}
        </if>
        <if test="order_return_id != null">
            and inventory_in.order_return_id = #{order_return_id}
        </if>
    </select>

    <select id="getInventoryInCommodityByPid" resultType="com.xinshan.model.InventoryInCommodity">
        select * from inventory_in_commodity where purchase_commodity_id = #{purchase_commodity_id}
    </select>
    <select id="getInventoryInCommodityByAfterSalesCommodityId" resultType="com.xinshan.model.InventoryInCommodity">
        select * from inventory_in_commodity where purchase_commodity_id = #{purchase_commodity_id}
    </select>

    <resultMap id="inventoryInCommodityResultMap" type="com.xinshan.model.extend.inventory.InventoryInCommodityExtend"
               extends="com.xinshan.dao.InventoryInCommodityMapper.BaseResultMap">
        <association property="commodity" javaType="com.xinshan.model.Commodity"
                     resultMap="com.xinshan.dao.CommodityMapper.BaseResultMap">

        </association>
        <association property="purchaseCommodity" javaType="com.xinshan.model.PurchaseCommodity"
                     resultMap="com.xinshan.dao.PurchaseCommodityMapper.BaseResultMap">

        </association>
        <association property="commodityStore" javaType="com.xinshan.model.CommodityStore"
                     resultMap="com.xinshan.dao.CommodityStoreMapper.BaseResultMap">

        </association>
        <association property="orderCommodity" javaType="com.xinshan.model.OrderCommodity"
                     resultMap="com.xinshan.dao.OrderCommodityMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryInCommodities" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultMap="inventoryInCommodityResultMap">
        SELECT
        inventory_in_commodity.*
        ,commodity.commodity_code,commodity.commodity_name
        ,purchase_commodity.purchase_num,purchase_commodity.purchase_unit_price,purchase_commodity.purchase_total_price,purchase_commodity.purchase_unit_cost_price
        ,purchase_commodity.purchase_cost_price,purchase_commodity.purchase_arrival_num,purchase_commodity.purchase_commodity_remark,purchase_commodity.sample
        ,purchase_commodity.purchase_commodity_status,purchase_commodity.inventory_in_num,purchase_commodity.purchase_commodity_type
        ,commodity_store.store_name
        ,order_commodity.unit_price,order_commodity.bargain_price,order_commodity.revision_fee,order_commodity.commodity_total_price,order_commodity.discount
        ,order_commodity.commodity_num,order_commodity.order_commodity_return_num,order_commodity.order_commodity_num,order_commodity.order_commodity_type
        ,order_commodity.order_commodity_status,order_commodity.order_commodity_remark
        FROM inventory_in_commodity
        LEFT JOIN commodity ON inventory_in_commodity.commodity_id = commodity.commodity_id
        LEFT JOIN purchase_commodity on purchase_commodity.purchase_commodity_id = inventory_in_commodity.purchase_commodity_id
        LEFT JOIN commodity_store on inventory_in_commodity.commodity_store_id = commodity_store.commodity_store_id
        left join order_commodity on purchase_commodity.order_commodity_id = order_commodity.order_commodity_id
        where 1=1
        <if test="inventory_in_id != null">
            and inventory_in_commodity.inventory_in_id = #{inventory_in_id}
        </if>
        <if test="inventory_in_commodity_id != null">
            and inventory_in_commodity.inventory_in_commodity_id = #{inventory_in_commodity_id}
        </if>
        <if test="purchase_commodity_id != null">
            and inventory_in_commodity.purchase_commodity_id = #{purchase_commodity_id}
        </if>
    </select>

    <insert id="createInventoryHistory" parameterType="com.xinshan.model.InventoryHistory" useGeneratedKeys="true" keyProperty="inventory_history_id">
        insert into inventory_history (inventory_history_id, inventory_date,
          inventory_employee_code, inventory_employee_name,
          inventory_in_id, order_id, inventory_out_id,
          inventory_type, inventory_out_fee_check_status,
          inventory_history_settlement_status, inventory_history_code,
          inventory_history_in_out, gift_id, gift_return_id,
          inventory_history_remark)
        values (#{inventory_history_id,jdbcType=INTEGER}, #{inventory_date,jdbcType=TIMESTAMP},
          #{inventory_employee_code,jdbcType=VARCHAR}, #{inventory_employee_name,jdbcType=VARCHAR},
          #{inventory_in_id,jdbcType=INTEGER}, #{order_id,jdbcType=INTEGER}, #{inventory_out_id,jdbcType=INTEGER},
          #{inventory_type,jdbcType=INTEGER}, #{inventory_out_fee_check_status,jdbcType=INTEGER},
          #{inventory_history_settlement_status,jdbcType=INTEGER}, #{inventory_history_code,jdbcType=VARCHAR},
          #{inventory_history_in_out,jdbcType=INTEGER}, #{gift_id,jdbcType=INTEGER}, #{gift_return_id,jdbcType=INTEGER},
          #{inventory_history_remark,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="createInventoryHistoryDetail" parameterType="com.xinshan.model.InventoryHistoryDetail" useGeneratedKeys="true" keyProperty="inventory_history_detail_id">
        insert into inventory_history_detail (inventory_history_detail_id, inventory_history_id,
          inventory_in_commodity_id, inventory_history_num,
          commodity_num_id, inventory_out_commodity_id,
          inventory_in_out, commodity_id, sample,
          supplier_out, inventory_in_commodity_freight,
          inventory_history_return_num, commodity_num
          )
        values (#{inventory_history_detail_id,jdbcType=INTEGER}, #{inventory_history_id,jdbcType=INTEGER},
          #{inventory_in_commodity_id,jdbcType=INTEGER}, #{inventory_history_num,jdbcType=INTEGER},
          #{commodity_num_id,jdbcType=INTEGER}, #{inventory_out_commodity_id,jdbcType=INTEGER},
          #{inventory_in_out,jdbcType=INTEGER}, #{commodity_id,jdbcType=INTEGER}, #{sample,jdbcType=INTEGER},
          #{supplier_out,jdbcType=INTEGER}, #{inventory_in_commodity_freight,jdbcType=DECIMAL},
          #{inventory_history_return_num,jdbcType=INTEGER}, #{commodity_num,jdbcType=INTEGER}
          )
    </insert>

    <resultMap id="inventoryHistoryResultMap" type="com.xinshan.model.extend.inventory.InventoryHistoryExtend"
               extends="com.xinshan.dao.InventoryHistoryMapper.BaseResultMap">
        <association property="order" javaType="com.xinshan.model.Order" resultMap="com.xinshan.dao.OrderMapper.BaseResultMap"/>
        <association property="logistics" javaType="com.xinshan.model.Logistics" resultMap="com.xinshan.dao.LogisticsMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryHistories" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultMap="inventoryHistoryResultMap">
        select * from inventory_history
        left join inventory_history_detail on inventory_history.inventory_history_id = inventory_history_detail.inventory_history_id
        left join `order` on `order`.order_id = inventory_history.order_id
        left join logistics on inventory_history.inventory_history_id = logistics.inventory_history_id
        where 1=1
        <if test="param != null">
            and (`order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            )
        </if>
        <if test="order_id != null">
            and inventory_history.order_id = #{order_id}
        </if>
        <if test="inventory_in_id != null">
            and inventory_history.inventory_in_id = #{inventory_in_id}
        </if>
        <if test="inventory_out_id != null">
            and inventory_history.inventory_out_id = #{inventory_out_id}
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="inventory_type != null">
            and inventory_history.inventory_type = #{inventory_type}
        </if>
        order by inventory_history.inventory_date desc
        <if test="limit != null and start != null">
            limit #{start},#{limit}
        </if>
    </select>
    <resultMap id="inventoryHistoryDetailResultMap" type="com.xinshan.model.extend.inventory.InventoryHistoryDetailExtend"
               extends="com.xinshan.dao.InventoryHistoryDetailMapper.BaseResultMap">
        <association property="commodityStore" javaType="com.xinshan.model.CommodityStore"
                     resultMap="com.xinshan.dao.CommodityStoreMapper.BaseResultMap"/>
        <association property="commodityNum" javaType="com.xinshan.model.CommodityNum"
                     resultMap="com.xinshan.dao.CommodityNumMapper.BaseResultMap"/>
        <association property="inventoryInCommodity" javaType="com.xinshan.model.InventoryInCommodity"
                     resultMap="com.xinshan.dao.InventoryInCommodityMapper.BaseResultMap"/>
        <association property="commodity" javaType="com.xinshan.model.Commodity"
                     resultMap="com.xinshan.dao.CommodityMapper.BaseResultMap"/>
        <association property="inventoryOutCommodity" javaType="com.xinshan.model.InventoryOutCommodity"
                     resultMap="com.xinshan.dao.InventoryOutCommodityMapper.BaseResultMap"/>
        <association property="supplier" javaType="com.xinshan.model.Supplier"
                     resultMap="com.xinshan.dao.SupplierMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryHistoryDetails" resultMap="inventoryHistoryDetailResultMap">
        select * from inventory_history_detail
        left join commodity_num on inventory_history_detail.commodity_num_id = commodity_num.commodity_num_id
        left join commodity_store on commodity_store.commodity_store_id = commodity_num.commodity_store_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join supplier on commodity.supplier_id = supplier.supplier_id
        left join inventory_in_commodity on inventory_history_detail.inventory_in_commodity_id = inventory_in_commodity.inventory_in_commodity_id
        left join inventory_out_commodity on inventory_history_detail.inventory_out_commodity_id = inventory_out_commodity.inventory_out_commodity_id
        where inventory_history_detail.inventory_history_id = #{inventory_history_id}
    </select>

    <select id="inventoryHistoryList" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select DISTINCT inventory_history.inventory_history_id from inventory_history
        left join inventory_history_detail on inventory_history.inventory_history_id = inventory_history_detail.inventory_history_id
        left join `order` on `order`.order_id = inventory_history.order_id
        left join logistics on inventory_history.inventory_history_id = logistics.inventory_history_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        where 1=1
        and inventory_history_detail.inventory_history_detail_id is not null
        <if test="param != null">
            and (`order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            or commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            )
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="order_id != null">
            and inventory_history.order_id = #{order_id}
        </if>
        <if test="inventory_in_id != null">
            and inventory_history.inventory_in_id = #{inventory_in_id}
        </if>
        <if test="inventory_out_id != null">
            and inventory_history.inventory_out_id = #{inventory_out_id}
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="inventory_type != null">
            and inventory_history.inventory_type = #{inventory_type}
        </if>
        <if test="startDate != null and endDate != null">
            and inventory_history.inventory_date &gt;= #{startDate} and #{endDate} &gt;= inventory_history.inventory_date
        </if>
        order by inventory_history.inventory_date desc
        <if test="limit != null and start != null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="countInventoryHistory" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select count(DISTINCT inventory_history.inventory_history_id) from inventory_history
        left join inventory_history_detail on inventory_history.inventory_history_id = inventory_history_detail.inventory_history_id
        left join `order` on `order`.order_id = inventory_history.order_id
        left join logistics on inventory_history.inventory_history_id = logistics.inventory_history_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        where 1=1
        and inventory_history_detail.inventory_history_detail_id is not null
        <if test="param != null">
            and (`order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            or commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            )
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="order_id != null">
            and inventory_history.order_id = #{order_id}
        </if>
        <if test="inventory_in_id != null">
            and inventory_history.inventory_in_id = #{inventory_in_id}
        </if>
        <if test="inventory_out_id != null">
            and inventory_history.inventory_out_id = #{inventory_out_id}
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="inventory_type != null">
            and inventory_history.inventory_type = #{inventory_type}
        </if>
        <if test="startDate != null and endDate != null">
            and inventory_history.inventory_date &gt;= #{startDate} and #{endDate} &gt;= inventory_history.inventory_date
        </if>
    </select>
</mapper>
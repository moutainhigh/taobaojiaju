<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinshan.dao.extend.inventory.InventoryOutExtendMapper">

    <select id="countInventoryOut" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select count(DISTINCT inventory_out.inventory_out_id) from inventory_out
        left join `order` on `order`.order_id = inventory_out.order_id
        left join inventory_out_commodity on inventory_out_commodity.inventory_out_id = inventory_out.inventory_out_id
        left join commodity on commodity.commodity_id = inventory_out_commodity.commodity_id
        LEFT JOIN supplier on supplier.supplier_id = inventory_out_commodity.supplier_id
        left join gift on gift.gift_id = inventory_out.inventory_out_obj_id and inventory_out.inventory_out_type=4
        left join inventory_history on inventory_history.inventory_out_id = inventory_out.inventory_out_id
        left join `user` on `user`.user_id = gift.user_id
        where 1=1
        <include refid="inventoryOutQuery"/>
    </select>

    <select id="inventoryOutIds" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select DISTINCT inventory_out.inventory_out_id from inventory_out
        left join `order` on `order`.order_id = inventory_out.order_id
        left join inventory_out_commodity on inventory_out_commodity.inventory_out_id = inventory_out.inventory_out_id
        left join commodity on commodity.commodity_id = inventory_out_commodity.commodity_id
        LEFT JOIN supplier on supplier.supplier_id = inventory_out_commodity.supplier_id
        left join inventory_history on inventory_history.inventory_out_id = inventory_out.inventory_out_id
        left join gift on gift.gift_id = inventory_out.inventory_out_obj_id and inventory_out.inventory_out_type=4
        left join `user` on `user`.user_id = gift.user_id
        where 1=1
        <include refid="inventoryOutQuery"/>
        order by inventory_out.inventory_out_status,`order`.delivery_date
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>

    <sql id="inventoryOutQuery">
        <if test="order_id != null">
            and `order`.order_id = #{order_id}
        </if>
        <if test="param != null">
            and (`order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            or `order`.order_paper_code like "%"#{param}"%"
            or `gift`.gift_code like "%"#{param}"%"
            or `user`.user_name like "%"#{param}"%"
            or commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            or inventory_out.inventory_out_code like "%"#{param}"%"
            or inventory_history.inventory_history_code like "%"#{param}"%"
            )
        </if>
        <if test="commodity_id != null">
            and commodity.commodity_id=#{commodity_id}
        </if>
        <if test="supplier_id != null">
            and supplier.supplier_id = #{supplier_id}
        </if>
        <if test="inventory_out_status != null">
            and find_in_set(inventory_out.inventory_out_status, #{inventory_out_status})
        </if>
        <if test="inventory_out_type != null">
            and inventory_out.inventory_out_type = #{inventory_out_type}
        </if>
        <if test="inventory_out_obj_id != null">
            and inventory_out.inventory_out_obj_id = #{inventory_out_obj_id}
        </if>
    </sql>

    <resultMap id="inventoryOutResultMap" type="com.xinshan.model.extend.inventory.InventoryOutExtend"
               extends="com.xinshan.dao.InventoryOutMapper.BaseResultMap">
        <association property="order" javaType="com.xinshan.model.Order"
                     resultMap="com.xinshan.dao.OrderMapper.BaseResultMap"/>
        <association property="gift" javaType="com.xinshan.model.Gift"
                     resultMap="com.xinshan.dao.GiftMapper.BaseResultMap"/>
        <association property="user" javaType="com.xinshan.model.User"
                     resultMap="com.xinshan.dao.UserMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryOutList" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultMap="inventoryOutResultMap">
        select inventory_out.*,`order`.order_code,`order`.customer_name,`order`.customer_phone_number,
        `order`.delivery_date,`order`.delivery_address,`order`.employee_name
        ,gift.gift_code,gift.gift_remark,user.user_name,user.user_phone,user.user_address
        from inventory_out
        left join `order` on `order`.order_id = inventory_out.order_id
        left join gift on gift.gift_id = inventory_out.inventory_out_obj_id and inventory_out.inventory_out_type=4
        left join user on gift.user_id = user.user_id
        where 1=1
        <if test="inventoryOutIds">
            and inventory_out.inventory_out_id in
            <foreach item="item" index="index" collection="inventoryOutIds"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by inventory_out.inventory_out_status,`order`.delivery_date
    </select>

    <insert id="createInventoryOut" parameterType="com.xinshan.model.InventoryOut"
            useGeneratedKeys="true" keyProperty="inventory_out_id">
        insert into inventory_out (inventory_out_id, inventory_out_code,
          order_id, inventory_out_status, inventory_out_create_date,
          inventory_out_complete_date, record_employee_code,
          record_employee_name, inventory_out_type,
          inventory_out_obj_id)
        values (#{inventory_out_id,jdbcType=INTEGER}, #{inventory_out_code,jdbcType=VARCHAR},
          #{order_id,jdbcType=INTEGER}, #{inventory_out_status,jdbcType=INTEGER}, #{inventory_out_create_date,jdbcType=TIMESTAMP},
          #{inventory_out_complete_date,jdbcType=TIMESTAMP}, #{record_employee_code,jdbcType=VARCHAR},
          #{record_employee_name,jdbcType=VARCHAR}, #{inventory_out_type,jdbcType=INTEGER},
          #{inventory_out_obj_id,jdbcType=INTEGER})
    </insert>
    <insert id="createInventoryOutCommodity" parameterType="com.xinshan.model.InventoryOutCommodity"
            useGeneratedKeys="true" keyProperty="inventory_out_commodity_id">
        insert into inventory_out_commodity (inventory_out_commodity_id, inventory_out_id,
          commodity_id, supplier_id, inventory_out_total_num,
          order_commodity_num, inventory_out_commodity_status,
          sample, retrun_commodity, order_commodity_id,
          gift_commodity_id)
        values (#{inventory_out_commodity_id,jdbcType=INTEGER}, #{inventory_out_id,jdbcType=INTEGER},
          #{commodity_id,jdbcType=INTEGER}, #{supplier_id,jdbcType=INTEGER}, #{inventory_out_total_num,jdbcType=INTEGER},
          #{order_commodity_num,jdbcType=INTEGER}, #{inventory_out_commodity_status,jdbcType=INTEGER},
          #{sample,jdbcType=INTEGER}, #{retrun_commodity,jdbcType=INTEGER}, #{order_commodity_id,jdbcType=INTEGER},
          #{gift_commodity_id,jdbcType=INTEGER})
    </insert>

    <select id="inventoryOutCode" resultType="java.lang.String">
        select max(inventory_out_code) from inventory_out where inventory_out_code regexp "PO"+#{dateStr}+"[0-9]{3}"
    </select>

    <resultMap id="inventoryOutCommodityResultMap" type="com.xinshan.model.extend.inventory.InventoryOutCommodityExtend"
               extends="com.xinshan.dao.InventoryOutCommodityMapper.BaseResultMap">
        <result column="inventory_num" property="inventory_num" jdbcType="INTEGER"/>
        <association property="supplier" javaType="com.xinshan.model.Supplier"
                     resultMap="com.xinshan.dao.SupplierMapper.BaseResultMap">
        </association>
        <association property="commodity" javaType="com.xinshan.model.Commodity"
                     resultMap="com.xinshan.dao.CommodityMapper.BaseResultMap">
        </association>
        <association property="orderCommodity" javaType="com.xinshan.model.OrderCommodity"
                     resultMap="com.xinshan.dao.OrderCommodityMapper.BaseResultMap"/>
        <association property="giftCommodity" javaType="com.xinshan.model.GiftCommodity"
                     resultMap="com.xinshan.dao.GiftCommodityMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryOutCommodities" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultMap="inventoryOutCommodityResultMap">
        select *,
        (select sum(num) from commodity_num
        where commodity_num.commodity_id = inventory_out_commodity.commodity_id
        and commodity_num.sample = inventory_out_commodity.sample) as inventory_num
        from inventory_out_commodity
        LEFT JOIN commodity on commodity.commodity_id = inventory_out_commodity.commodity_id
        LEFT JOIN supplier on supplier.supplier_id = commodity.supplier_id
        left join order_commodity on inventory_out_commodity.order_commodity_id = order_commodity.order_commodity_id
        left join gift_commodity on inventory_out_commodity.gift_commodity_id = gift_commodity.gift_commodity_id
        where 1=1
        <if test="inventory_out_id != null">
            and inventory_out_commodity.inventory_out_id = #{inventory_out_id}
        </if>
        <if test="gift_commodity_id != null">
            and inventory_out_commodity.gift_commodity_id = #{gift_commodity_id}
        </if>
    </select>

    <insert id="createLogistics" parameterType="com.xinshan.model.Logistics" useGeneratedKeys="true" keyProperty="logistics_id">
        insert into logistics (logistics_id, logistics_status, inventory_history_id
          )
        values (#{logistics_id,jdbcType=INTEGER}, #{logistics_status,jdbcType=INTEGER}, #{inventory_history_id,jdbcType=INTEGER}
          )
    </insert>

    <select id="getInventoryOutCommodityByOrderCommodityId" resultType="com.xinshan.model.InventoryOutCommodity">
        select * from inventory_out_commodity where order_commodity_id = #{order_commodity_id}
    </select>
</mapper>
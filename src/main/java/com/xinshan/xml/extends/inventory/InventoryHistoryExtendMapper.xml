<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinshan.dao.extend.inventory.InventoryHistoryExtendMapper">
    <insert id="createInventoryHistory" parameterType="com.xinshan.model.InventoryHistory" useGeneratedKeys="true" keyProperty="inventory_history_id">
        insert into inventory_history (inventory_history_id, inventory_date,
          inventory_employee_code, inventory_employee_name,
          inventory_in_id, order_id, inventory_out_id,
          inventory_type, inventory_out_fee_check_status,
          inventory_history_settlement_status, inventory_history_code,
          inventory_history_in_out, gift_id, gift_return_id,
          inventory_move_id, inventory_history_remark
          )
        values (#{inventory_history_id,jdbcType=INTEGER}, #{inventory_date,jdbcType=TIMESTAMP},
          #{inventory_employee_code,jdbcType=VARCHAR}, #{inventory_employee_name,jdbcType=VARCHAR},
          #{inventory_in_id,jdbcType=INTEGER}, #{order_id,jdbcType=INTEGER}, #{inventory_out_id,jdbcType=INTEGER},
          #{inventory_type,jdbcType=INTEGER}, #{inventory_out_fee_check_status,jdbcType=INTEGER},
          #{inventory_history_settlement_status,jdbcType=INTEGER}, #{inventory_history_code,jdbcType=VARCHAR},
          #{inventory_history_in_out,jdbcType=INTEGER}, #{gift_id,jdbcType=INTEGER}, #{gift_return_id,jdbcType=INTEGER},
          #{inventory_move_id,jdbcType=INTEGER}, #{inventory_history_remark,jdbcType=LONGVARCHAR}
          )
    </insert>
    <insert id="createInventoryHistoryDetail" parameterType="com.xinshan.model.InventoryHistoryDetail" useGeneratedKeys="true"
            keyProperty="inventory_history_detail_id">
        insert into inventory_history_detail (inventory_history_detail_id, inventory_history_id,
          inventory_in_commodity_id, inventory_history_num,
          commodity_num_id, inventory_out_commodity_id,
          inventory_in_out, commodity_id, sample,
          supplier_out, inventory_in_commodity_freight,
          inventory_history_return_num, commodity_num
          )
        values (#{inventory_history_detail_id,jdbcType=INTEGER}, #{inventory_history_id,jdbcType=INTEGER},
          #{inventory_in_commodity_id,jdbcType=INTEGER}, #{inventory_history_num,jdbcType=INTEGER},
          #{commodity_num_id,jdbcType=INTEGER}, #{inventory_out_commodity_id,jdbcType=INTEGER},
          #{inventory_in_out,jdbcType=INTEGER}, #{commodity_id,jdbcType=INTEGER}, #{sample,jdbcType=INTEGER},
          #{supplier_out,jdbcType=INTEGER}, #{inventory_in_commodity_freight,jdbcType=DECIMAL},
          #{inventory_history_return_num,jdbcType=INTEGER}, #{commodity_num,jdbcType=INTEGER}
          )
    </insert>


    <resultMap id="inventoryHistoryResultMap" type="com.xinshan.model.extend.inventory.InventoryHistoryExtend"
               extends="com.xinshan.dao.InventoryHistoryMapper.BaseResultMap">
        <association property="logistics" javaType="com.xinshan.model.Logistics"
                     resultMap="com.xinshan.dao.LogisticsMapper.BaseResultMap"/>
        <association property="order" javaType="com.xinshan.model.Order"
                     resultMap="com.xinshan.dao.OrderMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryHistories" parameterType="com.xinshan.pojo.inventory.InventoryHistorySearchOption" resultMap="inventoryHistoryResultMap">
        select
        inventory_history.*,
        inventory_history_detail.*,
        logistics.*,
        `order`.order_code,`order`.customer_name,`order`.customer_phone_number,`order`.delivery_address,`order`.order_date
        from inventory_history
        left join inventory_history_detail on inventory_history.inventory_history_id = inventory_history_detail.inventory_history_id
        left join logistics on logistics.inventory_history_id = inventory_history.inventory_history_id
        left join `order` on inventory_history.order_id = `order`.order_id
        where 1=1
        <if test="inventoryHistoryIds != null">
            and inventory_history.inventory_history_id in
            <foreach item="item" index="index" collection="inventoryHistoryIds"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <choose>
            <when test="inventory_history_id_order == null">
                order by inventory_history.inventory_history_id desc
            </when>
            <otherwise>
                order by inventory_history.inventory_history_id asc
            </otherwise>
        </choose>
    </select>

    <select id="inventoryHistoryIds" parameterType="com.xinshan.pojo.inventory.InventoryHistorySearchOption" resultType="java.lang.Integer">
        select DISTINCT inventory_history.inventory_history_id from inventory_history
        left join inventory_history_detail on inventory_history.inventory_history_id = inventory_history_detail.inventory_history_id
        left join `order` on inventory_history.order_id = `order`.order_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join logistics on logistics.inventory_history_id = inventory_history.inventory_history_id
        where 1=1
        <include refid="inventoryHistoryQuery"/>
        order by inventory_history.inventory_history_id desc
        <if test="limit != null and start != null">
            limit #{start},#{limit}
        </if>
    </select>
    <sql id="inventoryHistoryQuery">
        <if test="order_id != null">
            and inventory_history.order_id = #{order_id}
        </if>
        <if test="inventory_type != null">
            and find_in_set(inventory_history.inventory_type, #{inventory_type})
        </if>
        <if test="inventory_history_in_out != null">
            and inventory_history.inventory_history_in_out = #{inventory_history_in_out}
        </if>
        and inventory_history_detail.inventory_history_detail_id is not null
        <if test="param != null">
            and (`order`.customer_name like "%"#{param}"%"
            or `order`.customer_phone_number like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%"
            or commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            or inventory_history.inventory_history_code like "%"#{param}"%"
            )
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="inventory_in_id != null">
            and inventory_history.inventory_in_id = #{inventory_in_id}
        </if>
        <if test="inventory_out_id != null">
            and inventory_history.inventory_out_id = #{inventory_out_id}
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="startDate != null and endDate != null">
            and inventory_history.inventory_date &gt;= #{startDate} and #{endDate} &gt;= inventory_history.inventory_date
        </if>
        <if test="inventoryOutIds != null">
            and inventory_history.inventory_out_id in
            <foreach item="item" index="index" collection="inventoryOutIds"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="inventoryInIds != null">
            and inventory_history.inventory_in_id in
            <foreach item="item" index="index" collection="inventoryInIds"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="inventory_out_fee_check_status != null">
            and find_in_set(inventory_history.inventory_out_fee_check_status, #{inventory_out_fee_check_status})
        </if>
        <if test="gift_id != null">
            and inventory_history.gift_id = #{gift_id}
        </if>
        <if test="gift_return_id != null">
            and inventory_history.gift_return_id = #{gift_return_id}
        </if>
        <if test="logistics_status != null">
            and find_in_set(logistics.logistics_status, #{logistics_status})
        </if>
        <if test="inventory_history_settlement_status != null">
            and inventory_history.inventory_history_settlement_status = #{inventory_history_settlement_status}
        </if>
    </sql>
    <select id="countInventoryHistory" parameterType="com.xinshan.pojo.inventory.InventoryHistorySearchOption" resultType="java.lang.Integer">
        select count(DISTINCT inventory_history.inventory_history_id) from inventory_history
        left join inventory_history_detail on inventory_history.inventory_history_id = inventory_history_detail.inventory_history_id
        left join `order` on inventory_history.order_id = `order`.order_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join logistics on logistics.inventory_history_id = inventory_history.inventory_history_id
        where 1=1
        <include refid="inventoryHistoryQuery"/>
    </select>

    <resultMap id="inventoryHistoryDetailResultMap" type="com.xinshan.model.extend.inventory.InventoryHistoryDetailExtend"
               extends="com.xinshan.dao.InventoryHistoryDetailMapper.BaseResultMap">
        <association property="commodityStore" javaType="com.xinshan.model.CommodityStore"
                     resultMap="com.xinshan.dao.CommodityStoreMapper.BaseResultMap"/>
        <association property="commodityNum" javaType="com.xinshan.model.CommodityNum"
                     resultMap="com.xinshan.dao.CommodityNumMapper.BaseResultMap"/>
        <association property="inventoryInCommodity" javaType="com.xinshan.model.InventoryInCommodity"
                     resultMap="com.xinshan.dao.InventoryInCommodityMapper.BaseResultMap"/>
        <association property="commodity" javaType="com.xinshan.model.Commodity"
                     resultMap="com.xinshan.dao.CommodityMapper.BaseResultMap"/>
        <association property="inventoryOutCommodity" javaType="com.xinshan.model.InventoryOutCommodity"
                     resultMap="com.xinshan.dao.InventoryOutCommodityMapper.BaseResultMap"/>
        <association property="supplier" javaType="com.xinshan.model.Supplier"
                     resultMap="com.xinshan.dao.SupplierMapper.BaseResultMap"/>
        <association property="orderCommodity" javaType="com.xinshan.model.OrderCommodity"
                     resultMap="com.xinshan.dao.OrderCommodityMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryHistoryDetails" resultMap="inventoryHistoryDetailResultMap">
        select * from inventory_history_detail
        left join commodity_num on inventory_history_detail.commodity_num_id = commodity_num.commodity_num_id
        left join commodity_store on commodity_store.commodity_store_id = commodity_num.commodity_store_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join supplier on commodity.supplier_id = supplier.supplier_id
        left join inventory_in_commodity on inventory_history_detail.inventory_in_commodity_id = inventory_in_commodity.inventory_in_commodity_id
        left join inventory_out_commodity on inventory_history_detail.inventory_out_commodity_id = inventory_out_commodity.inventory_out_commodity_id
        left join order_commodity on order_commodity.order_commodity_id = inventory_out_commodity.order_commodity_id
        where inventory_history_detail.inventory_history_id = #{inventory_history_id}
    </select>

    <select id="todayInventoryHistoryCode" resultType="java.lang.String">
        select max(inventory_history_code) from inventory_history where inventory_history_code regexp #{dateStr}
    </select>

    <resultMap id="resultMap" type="com.xinshan.model.extend.inventory.InventoryHistoryDetailExtend"
               extends="com.xinshan.dao.InventoryHistoryDetailMapper.BaseResultMap">
        <association property="inventoryInCommodity" javaType="com.xinshan.model.InventoryInCommodity"
                     resultMap="com.xinshan.dao.InventoryInCommodityMapper.BaseResultMap"/>
        <association property="inventoryHistory" javaType="com.xinshan.model.InventoryHistory"
                     resultMap="com.xinshan.dao.InventoryHistoryMapper.BaseResultMap"/>
        <association property="inventoryOutCommodity" javaType="com.xinshan.model.InventoryOutCommodity"
                     resultMap="com.xinshan.dao.InventoryOutCommodityMapper.BaseResultMap"/>
        <association property="commodity" javaType="com.xinshan.model.Commodity"
                     resultMap="com.xinshan.dao.CommodityMapper.BaseResultMap"/>
        <association property="supplier" javaType="com.xinshan.model.Supplier"
                     resultMap="com.xinshan.dao.SupplierMapper.BaseResultMap"/>
        <association property="order" javaType="com.xinshan.model.Order" resultMap="com.xinshan.dao.OrderMapper.BaseResultMap"/>
    </resultMap>
    <select id="inventoryHistoryDetailExtends" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultMap="resultMap">
        select
        inventory_history_detail.*,
        inventory_history.*,
        inventory_in_commodity.*,
        inventory_out_commodity.*,
        commodity.commodity_name,commodity.commodity_code,commodity.sell_price,commodity.purchase_price,
        supplier.supplier_name,supplier.contacts,
        `order`.order_code,`order`.customer_name,`order`.customer_phone_number,`order`.delivery_address
        from inventory_history_detail
        left join inventory_history on inventory_history_detail.inventory_history_id = inventory_history.inventory_history_id
        left join inventory_in_commodity on inventory_history_detail.inventory_in_commodity_id = inventory_in_commodity.inventory_in_commodity_id
        left join inventory_out_commodity on inventory_history_detail.inventory_out_commodity_id = inventory_out_commodity.inventory_out_commodity_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join supplier on commodity.supplier_id = supplier.supplier_id
        left join `order` on `order`.order_id = inventory_history.order_id
        where 1=1
        <include refid="inventoryHistoryDetailQuery"/>
        order by inventory_history.inventory_date desc
        <if test="limit != null and start != null">
            limit #{start},#{limit}
        </if>
    </select>
    <sql id="inventoryHistoryDetailQuery">
        <if test="param != null">
            and (commodity.commodity_name like "%"#{param}"%"
            or commodity.commodity_code like "%"#{param}"%"
            or `order`.customer_name like "%"#{param}"%"
            or `inventory_history`.inventory_history_code like "%"#{param}"%"
            or `order`.order_code like "%"#{param}"%")
        </if>
        <if test="order_id != null">
            and inventory_history.order_id = #{order_id}
        </if>
        <if test="inventory_in_id != null">
            and inventory_history.inventory_in_id = #{inventory_in_id}
        </if>
        <if test="inventory_history_in_out != null">
            and inventory_history.inventory_history_in_out = #{inventory_history_in_out}
        </if>
        <if test="inventory_out_id != null">
            and inventory_history.inventory_out_id = #{inventory_out_id}
        </if>
        <if test="inventory_history_id != null">
            and inventory_history.inventory_history_id = #{inventory_history_id}
        </if>
        <if test="inventory_type != null">
            and inventory_history.inventory_type = #{inventory_type}
        </if>
        <if test="supplier_id != null">
            and supplier.supplier_id = #{supplier_id}
        </if>
        <if test="commodity_id != null">
            and inventory_history_detail.commodity_id = #{commodity_id}
        </if>
        <if test="startDate != null and endDate != null">
            and (inventory_history.inventory_date &gt;= #{startDate} and inventory_history.inventory_date &lt;= #{endDate})
        </if>
        <choose>
            <when test="inventory_in_commodity_freight != null and inventory_in_commodity_freight == 0"><!-- 无云费 -->
                and (inventory_history_detail.inventory_in_commodity_freight = 0 or inventory_history_detail.inventory_in_commodity_freight is null)
            </when>
            <when test="inventory_in_commodity_freight != null and inventory_in_commodity_freight == 1"><!-- 有云费 -->
                and inventory_history_detail.inventory_in_commodity_freight &gt; 0
            </when>
        </choose>
    </sql>
    <select id="countInventoryHistoryDetailExtends" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.lang.Integer">
        select count(DISTINCT inventory_history_detail.inventory_history_detail_id) from inventory_history_detail
        left join inventory_history on inventory_history_detail.inventory_history_id = inventory_history.inventory_history_id
        left join inventory_in_commodity on inventory_history_detail.inventory_in_commodity_id = inventory_in_commodity.inventory_in_commodity_id
        left join inventory_out_commodity on inventory_history_detail.inventory_out_commodity_id = inventory_out_commodity.inventory_out_commodity_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join supplier on commodity.supplier_id = supplier.supplier_id
        left join `order` on `order`.order_id = inventory_history.order_id
        where 1=1
        <include refid="inventoryHistoryDetailQuery"/>
    </select>

    <select id="historyReportExport" parameterType="com.xinshan.pojo.inventory.InventorySearchOption" resultType="java.util.Map">
        select
        inventory_history.inventory_history_in_out as inventory_history_in_out,
        inventory_history.inventory_type as inventory_type,
        inventory_history.inventory_date as inventory_date,
        inventory_history.inventory_employee_name as inventory_employee_name,
        commodity.commodity_code as commodity_code,
        commodity.commodity_name as commodity_name,
        commodity.sell_price as sell_price ,
        supplier.supplier_name as supplier_name,
        inventory_history_detail.inventory_history_num as inventory_history_num,
        inventory_history_detail.inventory_in_commodity_freight as inventory_in_commodity_freight,
        inventory_history_detail.commodity_num as commodity_num ,
        commodity_store.store_name as store_name,
        order_commodity.bargain_price as bargain_price,
        order_commodity.revision_fee as revision_fee,
        `order`.customer_name as customer_name,
        `order`.customer_phone_number as customer_phone_number,
        purchase_commodity.purchase_unit_cost_price as purchase_unit_cost_price,
        purchase.purchase_code as purchase_code
        from inventory_history_detail
        left join inventory_history on inventory_history_detail.inventory_history_id = inventory_history.inventory_history_id
        left join inventory_in_commodity on inventory_history_detail.inventory_in_commodity_id = inventory_in_commodity.inventory_in_commodity_id
        left join inventory_out_commodity on inventory_history_detail.inventory_out_commodity_id = inventory_out_commodity.inventory_out_commodity_id
        left join commodity on inventory_history_detail.commodity_id = commodity.commodity_id
        left join supplier on commodity.supplier_id = supplier.supplier_id
        left join `order` on `order`.order_id = inventory_history.order_id
        left join commodity_num on inventory_history_detail.commodity_num_id = commodity_num.commodity_num_id
        left join commodity_store on commodity_store.commodity_store_id = commodity_num.commodity_store_id
        left join order_commodity on inventory_out_commodity.order_commodity_id = order_commodity.order_commodity_id
        left join purchase on `order`.order_id = purchase.order_id
        left join purchase_commodity on order_commodity.order_commodity_id = purchase_commodity.order_commodity_id
        where 1=1
        <include refid="inventoryHistoryDetailQuery"/>
        order by inventory_history_detail.inventory_history_detail_id desc
    </select>
</mapper>